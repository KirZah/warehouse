##################
DELIMITER //
use warehouse //

DROP PROCEDURE IF EXISTS create_mysql_user//
CREATE PROCEDURE create_mysql_user(IN username VARCHAR(50), IN host VARCHAR(50), IN password VARCHAR(50))
BEGIN
#     DECLARE `host` CHAR(15) DEFAULT '@\'localhost\'';
    SET username := CONCAT('\'', TRIM(BOTH '\'' FROM username), '\''),
        host     := CONCAT('@\'', TRIM(BOTH '\'' FROM TRIM(LEADING '@' FROM host)), '\''),
        password := CONCAT('\'', TRIM(BOTH '\'' FROM password), '\'');
    SET @`sql` := CONCAT('CREATE USER ', username, host, ' IDENTIFIED BY ', password);
    PREPARE `stmt` FROM @`sql`;
    EXECUTE `stmt`;
END//

DROP PROCEDURE IF EXISTS add_user//
CREATE PROCEDURE add_user(IN username VARCHAR(50), IN host VARCHAR(50), IN password VARCHAR(50), IN in_role VARCHAR(50))
add_user: BEGIN
    SET username := CONCAT('\'', TRIM(BOTH '\'' FROM username), '\''),
        host     := CONCAT('\'', TRIM(BOTH '\'' FROM TRIM(LEADING '@' FROM host)), '\''),
        password := CONCAT('\'', TRIM(BOTH '\'' FROM password), '\''),
        @username_and_host := CONCAT(username, '@', host);
    CASE in_role
        WHEN 'administrator' THEN
            BEGIN
            CALL create_mysql_user(username, host, password);
            SET @`sql` := CONCAT(
                'GRANT ALL PRIVILEGES ON warehouse.* TO ', username, host, ';'
                );
            PREPARE `stmt` FROM @`sql`;
            EXECUTE `stmt`;
            DEALLOCATE PREPARE `stmt`;
            END;
        WHEN 'boss' THEN
            BEGIN
            CALL create_mysql_user(username, host, password);
            SET @`sql` := CONCAT(
                'GRANT SELECT, INSERT, DELETE, UPDATE ON warehouse.* TO ', username, host, ';'
                );

            PREPARE `stmt` FROM @`sql`;
            EXECUTE `stmt`;
            DEALLOCATE PREPARE `stmt`;
            END;
        WHEN 'pc_operator' THEN
            BEGIN
            CALL create_mysql_user(username, host, password);
#             SET @`sequels` :=
            SET @`sql` := CONCAT(
#                 'GRANT SELECT, INSERT ON warehouse.*                TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.suppliers        TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.supplies         TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.goods_supplies   TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.goods            TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.catalog          TO ', username, host, ';',
                'GRANT SELECT         ON warehouse.storage          TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.goods_shipments  TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.shipments        TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.customers        TO ', username, host, ';'
                );
            PREPARE `stmt` FROM @`sql`;
            EXECUTE `stmt`;
            DEALLOCATE PREPARE `stmt`;
            END;
        WHEN 'warehouseman' THEN
            BEGIN
            CALL create_mysql_user(username, host, password);
            GRANT 'warehouseman' TO username@host; # Access denied; you need (at least one of) the WITH ADMIN, ROLE_ADMIN, SUPER privilege(s) for this operation
            SET DEFAULT ROLE 'warehouseman' TO @username_and_host;
            END;
        ELSE
            BEGIN
#             SET @host = host; USING @host;
             SET @`msg` := CONCAT('FAILED PROCEDURE add_user. Got unknown role \'', in_role, '\'');
             SIGNAL SQLSTATE '99999'
             SET MESSAGE_TEXT = @msg , MYSQL_ERRNO = 1000;
#             SET MESSAGE_TEXT = CONCAT('FAILED PROCEDURE add_user. Got unknown role \'', role, '\''), MYSQL_ERRNO = 1000;
#             LEAVE add_user;
            END;
    END CASE;
    # GRANT SELECT, INSERT ON warehouse.suppliers         TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.supplies          TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.goods_supplies    TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.goods             TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.catalog           TO 'pc_operator'@'%';
    # GRANT SELECT         ON warehouse.storage           TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.goods_shipments   TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.shipments         TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.customers         TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT, UPDATE ON warehouse.storage   TO 'warehouseman'@'%';
    # GRANT SELECT                 ON warehouse.goods     TO 'warehouseman'@'%';
    # GRANT SELECT                 ON warehouse.catalog   TO 'warehouseman'@'%';
    # GRANT SELECT, INSERT, UPDATE ON warehouse.customers TO 'salesman'@'%';
    # GRANT SELECT                 ON warehouse.goods     TO 'salesman'@'%';
    # GRANT SELECT                 ON warehouse.catalog   TO 'salesman'@'%';
    # GRANT SELECT ON warehouse.catalog TO 'customer'@'%';
    # GRANT SELECT ON warehouse.catalog TO 'customer'@'%';
    FLUSH PRIVILEGES;
    # CALL save_user_role(IN `username` VARCHAR(50), IN `host` VARCHAR(50), IN `role` VARCHAR(50))
END//

DELIMITER ;

use warehouse;
CALL add_user('warehouseman2', 'localhost', 'warehouseman2', 'warehouseman');
###################

#####
######
#######
########
#########


################## CREATING USERS ##################
# # CREATE USER 'Chyvak88'@'%' IDENTIFIED BY 'Chyvak88';
# CREATE USER 'dev'@'%';
# CREATE USER 'administrator1'@'%' IDENTIFIED BY 'administrator1';
#
CREATE USER 'boss2'@'localhost' IDENTIFIED BY 'boss2';
# # GRANT  SELECT, INSERT, DELETE, UPDATE ON warehouse.* TO 'boss1'@'localhost';  # works well
GRANT 'boss' TO 'boss2'@'localhost';
# show grants for 'boss2'@'localhost';
show grants for 'warehouseman1'@'localhost' USING 'warehouseman';
# SELECT * FROM mysql.role_edges;
# DESC mysql.default_roles;
# SELECT * FROM mysql.default_roles;
SET DEFAULT ROLE 'boss' TO 'boss2'@'localhost'; # worked out
# change user
SELECT current_USER();
SELECT CURRENT_ROLE();
SELECT * FROM warehouse.catalog;
# change user
# I'll GRANT an additional role to user
GRANT 'administrator' TO 'boss2'@'localhost'; # that doesn't work that easy, read th article if you wanna to know how
# change user
INSERT INTO goods(catalog_id, is_sold, production_date, note) values('1', 0, '1999-10-20', 'note');

# CREATE USER 'pc_operator1'@'localhost' IDENTIFIED BY 'pc_operator1';
# # GRANT  SELECT, INSERT ON warehouse.* TO 'pc_operator1'@'localhost';  # works well
# # GRANT 'pc_operator' TO 'pc_operator1'@'localhost';
# # # drop user 'pc_operator1'@'localhost';
# CREATE USER 'warehouseman1'@'localhost' IDENTIFIED BY 'warehouseman1';
# CREATE USER 'salesman1'@'localhost' IDENTIFIED BY 'salesman1';
# CREATE USER 'customer1'@'localhost' IDENTIFIED BY 'customer1';
# # Grant 'customer2'@'localhost' TO 'customer'@'localhost';
# SET PASSWORD FOR 'dev'@'%' = PASSWORD('dev');
#
# GRANT   'developer'     TO 'dev'@'%';
# GRANT   'administrator'@'%' TO 'administrator1'@'%';
# GRANT   'boss'          TO 'boss1'@'localhost';
# GRANT   'pc_operator'   TO 'pc_operator1'@'localhost';
# GRANT   'warehouseman'@'%'  TO 'warehouseman1'@'localhost';
# GRANT   'salesman'      TO 'salesman1'@'localhost';
# GRANT   'customer'      TO 'customer1'@'localhost';
# FLUSH PRIVILEGES;

# insert into users(login, role) values('administrator1', 'administrator');

#^^^^^^^^^^^^^^^^^ CREATING USERS ^^^^^^^^^^^^^^^^^^
# drop user 'warehouseman1'@'localhost';
#
# # SET PASSWORD FOR 'administrator'@'localhost' = PASSWORD("administrator");  # ???
#
# SELECT CURRENT_ROLE();
# show grants;
# # SELECT
# #     SET 'developer_user'
# # ALTER


####################
################### PROCEDURES
##################
DELIMITER //
use warehouse;
DROP PROCEDURE IF EXISTS GetAllGoods//
CREATE PROCEDURE GetAllGoods()
BEGIN
	SELECT *  FROM goods;
END //
# DROP PROCEDURE IF EXISTS CreateUser//
# CREATE PROCEDURE CreateUser(IN username varchar(50), IN pass varchar(50), IN role varchar(50), IN hostname varchar(100))
# BEGIN
#     CREATE USER 'username'@'hostname' IDENTIFIED BY Ppass;
# #     GRANT SELECT, INSERT, UPDATE ON warehouse.customers TO 'salesman'@hostname;
# #     GRANT SELECT                 ON warehouse.goods     TO 'salesman'@hostname;
# #     GRANT SELECT                 ON warehouse.catalog   TO 'salesman'@hostname;
# END //
#
# DELIMITER ;


##################
DELIMITER //
use warehouse //

DROP PROCEDURE IF EXISTS create_mysql_user//
CREATE PROCEDURE create_mysql_user(IN username VARCHAR(50), IN host VARCHAR(50), IN password VARCHAR(50))
BEGIN
#     DECLARE `host` CHAR(15) DEFAULT '@\'localhost\'';
    SET username := CONCAT('\'', TRIM(BOTH '\'' FROM username), '\''),
        host     := CONCAT('@\'', TRIM(BOTH '\'' FROM TRIM(LEADING '@' FROM host)), '\''),
        password := CONCAT('\'', TRIM(BOTH '\'' FROM password), '\'');
    SET @`sql` := CONCAT('CREATE USER ', username, host, ' IDENTIFIED BY ', password);
    PREPARE `stmt` FROM @`sql`;
    EXECUTE `stmt`;
END//

DROP PROCEDURE IF EXISTS add_user//
CREATE PROCEDURE add_user(IN username VARCHAR(50), IN host VARCHAR(50), IN password VARCHAR(50), IN in_role VARCHAR(50))
add_user: BEGIN
    SET username := CONCAT('\'', TRIM(BOTH '\'' FROM username), '\''),
        host     := CONCAT('\'', TRIM(BOTH '\'' FROM TRIM(LEADING '@' FROM host)), '\''),
        password := CONCAT('\'', TRIM(BOTH '\'' FROM password), '\''),
        @username_and_host := CONCAT(username, '@', host);
    CASE in_role
        WHEN 'administrator' THEN
            BEGIN
            CALL create_mysql_user(username, host, password);
            SET @`sql` := CONCAT(
                'GRANT ALL PRIVILEGES ON warehouse.* TO ', username, host, ';'
                );
            PREPARE `stmt` FROM @`sql`;
            EXECUTE `stmt`;
            DEALLOCATE PREPARE `stmt`;
            END;
        WHEN 'boss' THEN
            BEGIN
            CALL create_mysql_user(username, host, password);
            SET @`sql` := CONCAT(
                'GRANT SELECT, INSERT, DELETE, UPDATE ON warehouse.* TO ', username, host, ';'
                );

            PREPARE `stmt` FROM @`sql`;
            EXECUTE `stmt`;
            DEALLOCATE PREPARE `stmt`;
            END;
        WHEN 'pc_operator' THEN
            BEGIN
            CALL create_mysql_user(username, host, password);
#             SET @`sequels` :=
            SET @`sql` := CONCAT(
#                 'GRANT SELECT, INSERT ON warehouse.*                TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.suppliers        TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.supplies         TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.goods_supplies   TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.goods            TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.catalog          TO ', username, host, ';',
                'GRANT SELECT         ON warehouse.storage          TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.goods_shipments  TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.shipments        TO ', username, host, ';',
                'GRANT SELECT, INSERT ON warehouse.customers        TO ', username, host, ';'
                );
            PREPARE `stmt` FROM @`sql`;
            EXECUTE `stmt`;
            DEALLOCATE PREPARE `stmt`;
            END;
        WHEN 'warehouseman' THEN
            BEGIN
            CALL create_mysql_user(username, host, password);
            GRANT 'warehouseman' TO username@host; # Access denied; you need (at least one of) the WITH ADMIN, ROLE_ADMIN, SUPER privilege(s) for this operation
            SET DEFAULT ROLE 'warehouseman' TO @username_and_host;
            END;
        ELSE
            BEGIN
#             SET @host = host; USING @host;
             SET @`msg` := CONCAT('FAILED PROCEDURE add_user. Got unknown role \'', in_role, '\'');
             SIGNAL SQLSTATE '99999'
             SET MESSAGE_TEXT = @msg , MYSQL_ERRNO = 1000;
#             SET MESSAGE_TEXT = CONCAT('FAILED PROCEDURE add_user. Got unknown role \'', role, '\''), MYSQL_ERRNO = 1000;
#             LEAVE add_user;
            END;
    END CASE;
    # GRANT SELECT, INSERT ON warehouse.suppliers         TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.supplies          TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.goods_supplies    TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.goods             TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.catalog           TO 'pc_operator'@'%';
    # GRANT SELECT         ON warehouse.storage           TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.goods_shipments   TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.shipments         TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT ON warehouse.customers         TO 'pc_operator'@'%';
    # GRANT SELECT, INSERT, UPDATE ON warehouse.storage   TO 'warehouseman'@'%';
    # GRANT SELECT                 ON warehouse.goods     TO 'warehouseman'@'%';
    # GRANT SELECT                 ON warehouse.catalog   TO 'warehouseman'@'%';
    # GRANT SELECT, INSERT, UPDATE ON warehouse.customers TO 'salesman'@'%';
    # GRANT SELECT                 ON warehouse.goods     TO 'salesman'@'%';
    # GRANT SELECT                 ON warehouse.catalog   TO 'salesman'@'%';
    # GRANT SELECT ON warehouse.catalog TO 'customer'@'%';
    # GRANT SELECT ON warehouse.catalog TO 'customer'@'%';
    FLUSH PRIVILEGES;
    # CALL save_user_role(IN `username` VARCHAR(50), IN `host` VARCHAR(50), IN `role` VARCHAR(50))
END//

DELIMITER ;

use warehouse;
CALL add_user('warehouseman2', 'localhost', 'warehouseman2', 'warehouseman');
###################
drop user 'username'@'localhost'; # need to drop username later
drop user 'boss'@'localhost';
####################
show grants;
# ################################
# create ROLE developer_user;
# grant alter,create,delete,drop,index,insert,select,update,trigger,alter
#  routine,create routine, execute, create temporary tables
# on warehouse.* to 'developer_user';
# grant 'developer_user' to 'user1';
# #############################
# create user 'user1' identified by 'ChangeMe' password expire;
# alter user 'user1' identified by '123';
# set password='12345';
# grant alter,create,delete,drop,index,insert,select,update,trigger,alter routine,
# create routine, execute, create temporary tables on user1.* to 'user1';

#####################
create procedure `new_user` (IN in_username nvarchar(50), in_password nvarchar(50))
language sql
    deterministic
    sql security definer
comment 'Create new user'
begin
    if not exists (select * from warehouse.users u
            where u.username = in_username) then
    begin
        insert users(login, password) values(in_login, in_password);
        select * from warehouse.users u
        where u.login = in_login and u.password = in_password;
    end;
    else
        select 1 as alredy_exist;
    end if;
end;
